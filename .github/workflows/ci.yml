name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  unit:
    name: Unit Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ruby-version: ['3.2.8', '3.3.0']
        rails-version: ['7.0', '7.1', '8.0']
    steps:
      - uses: actions/checkout@v4
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby-version }}
          bundler-cache: true
      - name: Install Rails
        run: |
          gem install rails -v "~> ${{ matrix.rails-version }}.0"
      - name: Run unit tests with coverage
        run: bundle exec rspec --tag unit
        env:
          COVERAGE: true
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
          RAILS_VERSION: ${{ matrix.rails-version }}
      - name: Upload coverage results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-report-unit-ruby-${{ matrix.ruby-version }}-rails-${{ matrix.rails-version }}
          path: coverage
          retention-days: 14

  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ruby-version: ['3.2.8', '3.3.0']
        rails-version: ['7.0', '7.1', '8.0']
    steps:
      - uses: actions/checkout@v4
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby-version }}
          bundler-cache: true
      - name: Install Rails
        run: |
          gem install rails -v "~> ${{ matrix.rails-version }}.0"
      - name: Run integration tests
        run: bundle exec rspec --tag integration

  rubocop:
    name: RuboCop
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3.0'
          bundler-cache: true
      
      - name: Run RuboCop
        run: bundle exec rubocop 